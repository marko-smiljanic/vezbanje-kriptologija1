package com.mycompany.aes;


import com.mycompany.aes.AES;
import javax.crypto.SecretKey;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JFileChooser;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Marko
 */
public class AESGui extends javax.swing.JFrame {

    /**
     * Creates new form AESGui
     */
    public AESGui() {
        initComponents();
        setTitle("AES sifrarski algoritam");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Sifruj");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Desifruj");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Aplikacija radi sa fajlovima. Kljuc se automatski generise na 256, velicina bloka, tj. IV je 128.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74))
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(71, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //dugme za sifrovanje
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        SecretKey kljuc = AES.generisiKljuc(256); 
        IvParameterSpec iv = AES.generisiIV(16);          
        AES aes = new AES();
        byte[] poruka = aes.ucitajFajl("Izaberite fajl koji zelite da sifrujete"); 
        aes.sacuvajFajl(kljuc.getEncoded(), "Unesite naziv fajla u kom ce se cuvati kljuc"); 
        aes.sacuvajFajl(iv.getIV(), "Unesite naziv fajla u kom ce se cuvati inicijalni vektor");        
                    
        byte[] sifrat = aes.sifruj(poruka, kljuc, iv);
        aes.sacuvajFajl(sifrat, "Unesite naziv fajla gde zelite da sacuvate sifrat");
    }//GEN-LAST:event_jButton1ActionPerformed

    //dugme za desifrovanje
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        AES aes = new AES();
        byte[] sifrat = aes.ucitajFajl("Izaberite fajl u kome se nalazi sifat");        
        byte[] kljucByte = aes.ucitajFajl("Izaberite fajl u kome se nalazi kljuc.");
        byte[] ivByte = aes.ucitajFajl("Izaberite fajl u kome se nalazi inicijalni vektor");
        SecretKey kljuc = new SecretKeySpec(kljucByte, 0, kljucByte.length, "AES");
        IvParameterSpec iv = new IvParameterSpec(ivByte);
        
        byte[] desifrovanaPoruka = aes.desifruj(sifrat, kljuc, iv);
        aes.sacuvajFajl(desifrovanaPoruka, "Unesite naziv fajla gde zelite da sacuvate desifrovani fajl");
        
        //izmenim fajlove pa ih pobrisem sa delete()
        
        
        
        //ovako sam odradio jer je generisi kljuc i generisi iv implementirano tako da se ne generise na osnovu neke lozinke koju 
        //    korisnik unese, nego samo na osnovu duzine koja se zada, a meni treba isti kljuc i iv za desifrovanje?        
        //kako bih implementirao brisanje originalnog (sifrovanog fajla) posle sifrovanja, i npr. sifrovanog fajla posle desifrovanja
        //da li bi fajlovi koji sadrze kljuc i iv trebalo nekad da se obrisu (verovatno posle procesa desifrovanja).
        //ovo sada radi, a da li je moglo nekako bolje da se odradi (realnije necemu sto se koristi u stvarnom zivotu)
        //new File(fajl).delete(); ovako se brise fajl!!! brise ga sa diska, ne ide u kantu, brise pokazivac
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AESGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AESGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AESGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AESGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AESGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
